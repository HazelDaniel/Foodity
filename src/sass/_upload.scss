.add-recipe-window {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100rem;
  // background-color: $textColor;
  border-radius: 9px;

  padding: 5rem 6rem;
  // box-shadow: 0 4rem 6rem rgba(0, 0, 0, 0.25);
  z-index: 1000;
  transition: all 0.5s;

  .btn--close-modal {
    font-family: inherit;
    position: absolute;
    top: -10%;
    right: 50%;
    font-size: 3.5rem;
    cursor: pointer;
    background: none;
    border: 3px solid $dullTextColor;
    border-radius: 50%;
    height: 4rem;
    width: 4rem;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
    color: $dullTextColor;
    box-shadow: .5rem .8rem 3rem $cancelBtnShadowColor;
  }
  @mixin modalDiv {
    position: absolute;
    content: "";
    width: 50%;
    height: 100%;
    top: 0;
    display: block;
    z-index: -1;
  }

  &::before{
    @include modalDiv();
    border-top-left-radius: inherit;
    border-bottom-left-radius: inherit;
    left: 0;
    background-color: $modalLeftColor;
  }
  &:after{

    @include modalDiv();
    border-top-right-radius: inherit;
    border-bottom-right-radius: inherit;
    right: 0;
    background-color: $modalRightColor;

  }
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: $modalOverlayColor;
  backdrop-filter: blur(4px);
  z-index: 100;
  transition: all 0.5s;
}

.hidden {
  visibility: hidden;
  opacity: 0;
}

.upload {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 4rem 6rem;

  &__column {
    display: grid;
    grid-template-columns: 1fr 2.8fr;
    align-items: center;
    gap: 1.5rem;

    & label {
      font-size: 1.5rem;
      font-weight: 600;
      color: inherit;
    }

    & input {
      font-size: 1.5rem;
      padding: 0.8rem 1rem;
      border-radius: 0.5rem;
      transition: all 0.2s;

      &::placeholder {
        color: $modalPlaceHolderColor;
      }

      &:focus {
        outline: none;
        border: 1px solid $color-primary;
        // background-color: $color-grey-light-1;
      }
    }

    & button {
      grid-column: 1 / span 2;
      justify-self: center;
      margin-top: 1rem;
    }
  }

  &__heading {
    font-size: 2.25rem;
    font-weight: 700;
    text-transform: uppercase;
    margin-bottom: 1rem;
    grid-column: 1/-1;
    
  }

  &__btn {
    grid-column: 1 / -1;
    justify-self: center;
    background-color: $transparentColor;
    position: relative;
    @mixin btnPseudo {
      position: absolute;
        content: "";
        width: 50%;
        height: 100%;
        top: 0;
        display: block;
        z-index: -1;

    }
    &::before{
      @include btnPseudo();
      left: 0;
      border-top-left-radius: inherit;
      border-bottom-left-radius: inherit;
      border: 2px solid $modalRightColor;
    }
    span{
      margin-left: 4rem;
      color: $bgColor;
    }
    svg{
      fill: $textColor;
    }
  }
  .upload__heading{
    color: $primaryColor;
    font-weight: 200;
  }
  .upload__column{
    input{
      background-color: $primaryColor;
      border-radius: 8rem;
      padding: 0 2rem 0 2rem;
      height: 4rem;
      font-weight: 400;
      &:focus{
        border: none;
      }
    }
    label {
        color: $modalLabelColor;
      }
    &:first-of-type{
      input{
        color: $dullTextColor;
      }

    }
    &:last-of-type {
      input{
        color: $bgColor;
      }
      }
  }
}
